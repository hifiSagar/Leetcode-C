int uniquePathsWithObstacles(int** obstacleGrid, int obstacleGridSize, int* obstacleGridColSize) {
    int m = obstacleGridSize, n = *obstacleGridColSize;

    if(obstacleGrid[0][0] == 1 || obstacleGrid[m-1][n-1] == 1) return 0;

    long** res = (long**)calloc(m, sizeof(long*));
    for(int i=0; i<m; i++) {
        res[i] = (long*)calloc(n, sizeof(long));
    }
    
    res[0][0] = 10;

    for(int i=0; i<m; i++) {
        for(int x=0; x<n; x++) {

            if (x+1 < n && obstacleGrid[i][x]%10 == 0) {
                res[i][x+1] += res[i][x];
            }
            if (i+1 < m && obstacleGrid[i][x]%10 == 0) {
                res[i+1][x] += res[i][x];
            }
        }
    }
    return res[m-1][n-1]/10;
}