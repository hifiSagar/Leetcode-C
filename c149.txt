#include <stdlib.h>

#define MAX 20002

int parent[MAX];

int find(int x) {
    if (parent[x] != x) {
        parent[x] = find(parent[x]);
    }
    return parent[x];
}

void unionSet(int x, int y) {
    int rootX = find(x);
    int rootY = find(y);
    if (rootX != rootY) {
        parent[rootX] = rootY;
    }
}

int removeStones(int** stones, int stonesSize, int* stonesColSize) {
    for (int i = 0; i < MAX; ++i) {
        parent[i] = i;
    }

    for (int i = 0; i < stonesSize; ++i) {
        int x = stones[i][0];
        int y = stones[i][1] + 10001;
        unionSet(x, y);
    }

    int uniqueRoots[MAX] = {0};
    int count = 0;

    for (int i = 0; i < stonesSize; ++i) {
        int x = stones[i][0];
        int rootX = find(x);
        if (!uniqueRoots[rootX]) {
            uniqueRoots[rootX] = 1;
            count++;
        }
    }

    return stonesSize - count;
}
